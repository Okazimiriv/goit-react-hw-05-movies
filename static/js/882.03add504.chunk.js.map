{"version":3,"file":"static/js/882.03add504.chunk.js","mappings":"yMAEaA,EAAYC,EAAAA,EAAAA,IAAH,gFAMTC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,OAAO,UAACH,EAAD,WAAW,IAAEG,IACrB,C,4KCRYC,EAAeH,EAAAA,EAAAA,GAAH,oKAWZI,EAAWJ,EAAAA,EAAAA,GAAH,iQAQRK,EAAUL,EAAAA,EAAAA,IAAH,qHAOPM,EAAUN,EAAAA,EAAAA,IAAH,2CAIPO,EAAYP,EAAAA,EAAAA,EAAH,gHAOTQ,EAAgBR,EAAAA,EAAAA,EAAH,sE,SCmC1B,EAzDa,WACX,OAAgCS,EAAAA,EAAAA,UAAS,CAAC,GAA1C,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAkBR,OAfAE,EAAAA,EAAAA,YAAU,WACRL,GAAa,GACbE,EAAS,OAETI,EAAAA,EAAAA,IAAiBH,GACdI,MAAK,SAAAC,GACqB,IAArBA,EAAKC,KAAKC,QAAcR,EAAS,oBACrCJ,EAAYU,EAAKC,KAClB,IACAE,OAAM,SAAAV,GAAK,OACVC,EAAS,sDADC,IAGXU,SAAQ,kBAAMZ,GAAa,EAAnB,GACZ,GAAE,CAACG,KAGF,+BACGJ,IACC,SAAC,IAAD,WACE,SAAC,KAAD,CAAWc,MAAM,sBAGrB,SAACvB,EAAD,UACGO,EAASa,OAAS,GACjBb,EAASiB,KAAI,YAA4C,IAAzCX,EAAwC,EAAxCA,GAAIY,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACnC,OACE,UAAC1B,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CACEyB,IACED,EAAY,0CAC2BA,G,yqMAGzCE,IAAG,UAAKJ,EAAL,aACHK,MAAM,QACNC,QAAQ,YAGZ,SAAC3B,EAAD,UAAYqB,KACZ,SAACpB,EAAD,+BAA8BqB,OAdjBb,EAiBlB,MAEJF,IAAS,SAAC,IAAD,UAAeA,MAG9B,C,sECtEYqB,E,QAASnC,EAAAA,IAAH,qE,mMCEnBoC,EAAAA,EAAAA,SAAAA,QAAA,+BACAA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAQ,oCAGV,IAAMC,EAAY,sBAEZC,EAAQ,UAEDC,EAAiB,mCAAG,wIAAc,EAAd,SACRJ,EAAAA,EAAAA,IAAUE,GADF,uBACvBG,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAA,UAVV,gBAUU,kBAA6BO,IADvB,uBACrBF,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAMfG,EAAY,mCAAG,WAAM5B,GAAN,yFACHoB,EAAAA,EAAAA,IAAA,UAAaG,GAAb,OAAqBvB,IADlB,uBAClByB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZtB,EAAgB,mCAAG,WAAMH,GAAN,yFACPoB,EAAAA,EAAAA,IAAA,UAAaG,GAAb,OAAqBvB,EAArB,aADO,uBACtByB,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBI,EAAmB,mCAAG,WAAM7B,GAAN,yFACVoB,EAAAA,EAAAA,IAAA,UAAaG,GAAb,OAAqBvB,EAArB,aADU,uBACzByB,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qD","sources":["ErorrMessage.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.js","components/Loader/Loader.styled.jsx","service/apiService.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErorrText = styled.div`\n  font-size: 20px;\n  margin-top: 40px;\n  color: red;\n`;\n\nexport const ErrorMessage = ({ children }) => {\n  return <ErorrText> {children}</ErorrText>;\n};\n","import styled from '@emotion/styled';\n\nexport const CastCardWrap = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  // align-items: center;\n\n  padding: 0;\n  margin: 0;\n  gap: 10px;  \n`;\n\nexport const CastItem = styled.li`\n  flex-basis: calc((100% - 9 * 10px) / 10);\n  box-shadow: 0px 1px 6px rgba(46, 47, 66, 0.08),\n    0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n  list-style: none;\n  border-radius: 0px 0px 4px 4px;\n    `;\n\nexport const Content = styled.div`\n  padding: 10px 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const CastImg = styled.img`\n  height: 100%;  \n`;\n\nexport const NameActor = styled.p`\n  margin-bottom: 5px;\n  text-align: center;\n  font-weight: 600;\n  line-height: 1.2;\n`;\n\nexport const CharacterText = styled.p`\n  margin-bottom: 5px;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader.styled';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { ErrorMessage } from 'ErorrMessage';\nimport { getMovieCastById } from 'service/apiService';\nimport avatar from './defavatar.png';\nimport {\n  CastCardWrap,\n  CastItem,\n  CastImg,\n  NameActor,\n  Content,\n  CharacterText,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [castList, setCastList] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n  // const { castList, isLoading, error } = useFetchMovieCast();\n  // const { id, name, character, profile_path } = castList;\n  useEffect(() => {\n    setIsLoading(true);\n    setError(null);\n\n    getMovieCastById(id)\n      .then(resp => {\n        if (resp.cast.length === 0) setError('No cast found...');\n        setCastList(resp.cast);\n      })\n      .catch(error =>\n        setError('Oops! Something went wrong! Try reloading the page!')\n      )\n      .finally(() => setIsLoading(false));\n  }, [id]);\n\n  return (\n    <section>\n      {isLoading && (\n        <Loader>\n          <ThreeDots color=\"lightslategrey\" />\n        </Loader>\n      )}\n      <CastCardWrap>\n        {castList.length > 0 &&\n          castList.map(({ id, name, character, profile_path }) => {\n            return (\n              <CastItem key={id}>\n                <Content>\n                  <CastImg\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n                        : avatar\n                    }\n                    alt={`${name} portrait`}\n                    width=\"100px\"\n                    loading=\"lazy\"\n                  />\n                </Content>\n                <NameActor>{name}</NameActor>\n                <CharacterText>{`Character: ${character}`}</CharacterText>\n              </CastItem>\n            );\n          })}\n      </CastCardWrap>\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n    </section>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  id: PropTypes.number.isRequired,\n  castList: PropTypes.array.isRequired,\n  getMovieCastById: PropTypes.func.isRequired,\n}.isRequired;\n","import styled from '@emotion/styled';\n\nexport const Loader = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\n","import axios from 'axios';\n\n// --url 'https://api.themoviedb.org/3/movie/11?api_key=75f1193eb903abcb6bf848342ccb4206'\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n};\n\nconst trendings = '/trending/movie/day';\nconst search = '/search/movie';\nconst movie = '/movie/';\n\nexport const getTrandingMovies = async (page = 1) => {\n  const { data } = await axios.get(trendings);\n  return data;\n};\n\n// --url 'https://api.themoviedb.org/3/search/movie?query=Jack+Reacher&api_key=75f1193eb903abcb6bf848342ccb4206'\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get(`${search}?query=${query}`);\n  return data;\n};\n\n// --url 'https://api.themoviedb.org/3/movie/movie_id?language=en-US' \\\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`${movie}${id}`);\n  return data;\n};\n\nexport const getMovieCastById = async id => {\n  const { data } = await axios.get(`${movie}${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviewsById = async id => {\n  const { data } = await axios.get(`${movie}${id}/reviews`);\n  return data;\n};\n"],"names":["ErorrText","styled","ErrorMessage","children","CastCardWrap","CastItem","Content","CastImg","NameActor","CharacterText","useState","castList","setCastList","isLoading","setIsLoading","error","setError","id","useParams","useEffect","getMovieCastById","then","resp","cast","length","catch","finally","color","map","name","character","profile_path","src","alt","width","loading","Loader","axios","api_key","trendings","movie","getTrandingMovies","data","getSearchMovies","query","getMovieById","getMovieReviewsById"],"sourceRoot":""}